One potential future feature (besides more customizable syntax and all)
would be to be able to specify a certain number of matches. like,
this name field must have the string ":)" 3 times. having
an option to pass though to real regexes might solve this.

it might be good to have a way to tell "collection" types (paren, or, minus)
from other nest types (compare and command) in the ast, to avoid code like

     [:paren, :pipe, :minus].include?(x[:nest_type])

TODO: it could be nice to be able to have an alias where the proper
name is off limits.

TODO: support arrays (and maybe other nesting/relations)

Search across fields
ann
ann orange

Search specific values and fields
"Ann"
color:orange

Use aliases
favorite_color:orange
color:red
(maybe do points/score)

Check booleans and existence
admin:true
score:false

Match with logical ORs
red|blue
red|blue|bob

Match with logical NOTs
-red
-(red|blue)
(green admin) | john

Search ranges and dates (via the Chronic Gem)
score<=100
born>today
a<b<c

----------

chronic thinks that "2000" means 20:20 today, not year 2000.
also it would be nice if "monday" matched any date on a monday, not just like this monday.
 -- for command at least (maybe compare it makes less sense)

--------------------------------
--------------------------------
