need to do something like this
Regexp.new('\b' + Regexp.escape(str) + '\b', 'i')
or
Regexp.new(Regexp.escape(str), 'i')
as opposed to the literals like
/#{Regexp.escape(str)}/i
to avoid building the wrong regexes when there is a special character (like 'A+')

look into how this handles apostrophes.

so "bee's knee" does not think its an unbalanced quote or so.

specs already have some good test data for that

{ title: "someone's iHat", feathers: 8, cost: 100, fav_date: "1.week.ago" }

what about "foo's unquoted bar's" unquoted should not be quoted

update readme to show that CommandSearch takes 3 arguments, the last being the options.

look at letting the search field take strings or symbols.

make sorting example in readme. this one should have better boundary respecting regex.

write tests with  /\$\d+/ => -> (match) { "cost:#{match[1..-1]}" }

performance folder where some benchmarks are logged.
