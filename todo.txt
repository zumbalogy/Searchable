look at letting the search field take strings or symbols.

write tests with  /\$\d+/ => -> (match) { "cost:#{match[1..-1]}" }

show example using aliases to support commas in numbers
/#{word_break}[,\d]+#{word_break}/ => -> (match) { match.tr(',', '') }
or something. that does not validate commas being every 3. maybe:
/(?<=\d),\d\d\d/

look into
# # TODO: Even with existence boolean, this should maybe check that the existing value is not false.
in mongoer.rb, memory.rb might need that too.

consider things like:
opt(':').should == [{ type: :str, value: ':' }]
so people can search emoji without quotes.
(clean_ununused_syntax in parser.rb)
