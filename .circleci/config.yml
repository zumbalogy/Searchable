# Ruby CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

version: 2
jobs:
  build:
    docker:
       - image: circleci/ruby:latest
       - image: circleci/mongo:latest
       - image: circleci/postgres:latest
         environment:
           POSTGRES_USER: command_search_user_test
           POSTGRES_DB: command_search_db_test
           POSTGRES_HOST_AUTH_METHOD: trust
       - image: circleci/mysql:latest
         command: [--default-authentication-plugin=mysql_native_password]
         environment:
            MYSQL_USER: root
            MYSQL_HOST: 127.0.0.1
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: command_search_db_test
            MYSQL_ALLOW_EMPTY_PASSWORD: true
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 30`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: Install MySQL CLI
          command: |
            sudo apt-get install default-mysql-client

      # # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $TEST_FILES

      - run:
          name: run benchmarks
          command: bundle exec ruby benches/mongoer_bench.rb

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
