name: Tests
on: [push]
jobs:
  test-container:
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      mongodb:
        image: mongo:4.4.1-bionic
        ports:
          - 27017:27017
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_HOST: 127.0.0.1
          MYSQL_HOSTNAME: 127.0.0.1
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=12s
          --health-timeout=6s
          --health-retries=6
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: command_search_user_test
          POSTGRES_DB: command_search_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 8s
          --health-timeout 4s
          --health-retries 2
    steps:
    - uses: actions/checkout@v2
    - name: Apt Install
      run: |
        apt-get update
        apt-get install -yqq build-essential gnupg2 procps libpq-dev
        apt-get install -yqq ruby ruby-dev
        apt-get install -yqq rubygems rubygems-integration
        apt-get install -yqq sqlite3 libsqlite3-dev
        apt-get install -yqq libmysqlclient-dev mysql-client
        apt-get install -yqq mongodb-clients
    - name: Setup MySQL
      run: |
        mysql --host mysql -uroot -e 'CREATE DATABASE IF NOT EXISTS command_search_db_test;'
    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7.1
    - name: Bundle
      run: |
        gem install bundler
        bundle install --jobs=4 --retry=2
    - name: Rspec
      run: bundle exec rspec
      env:
        MONGODB_HOST: mongodb
        MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }}
        MYSQL_HOST: mysql
        MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
