# name: My workflow
# on: [push]
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - run: bundle install

name: Tests
on: [push]
jobs:
  test:
    container: ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - mysql: mariadb:latest
            mongo: mongo:3.6
            postgres: postgres:9.5
          - mysql: mysql:5.6
            mongo: mongo:4.0
            postgres: postgres:9
          - mysql: mysql:5.7
            mongo: mongo:4.2-bionic
            postgres: postgres:11
          - mysql: mysql:8.0
            mongo: mongo:4.4.1-bionic
            postgres: postgres:13
          - mysql: mysql:latest
            mongo: mongo:latest
            postgres: postgres:latest
    services:
      mongodb:
        image: ${{ matrix.mongo }}
        ports:
          - 27017:27017
      mysql:
        image: ${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_HOST: 127.0.0.1
          MYSQL_HOSTNAME: 127.0.0.1
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 12s
          --health-timeout 6s
          --health-retries 6
      postgres:
        image: ${{ matrix.postgres }}
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: command_search_user_test
          POSTGRES_DB: command_search_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 8s
          --health-timeout 4s
          --health-retries 2
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-
      # - name: Apt Install
      #   run: |
      #     apt-get update
      #     apt-get install -yqq libsqlite3-dev
      #     apt-get install -yqq mysql-client libmysqlclient-dev
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Setup MySQL
        run: |
          mysql --host mysql -uroot -e 'CREATE DATABASE IF NOT EXISTS command_search_db_test;'
      - name: Bundle
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 2
      - name: Rspec
        run: bundle exec rspec
        env:
          MYSQL_HOST: mysql
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          MONGODB_HOST: mongodb
          MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }}
          POSTGRES_HOST: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
